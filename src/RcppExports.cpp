// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// find_2d_peaks_c
DataFrame find_2d_peaks_c(NumericVector mz, NumericVector rt, NumericVector intensity, double mz_ppm, double rt_window, double snr_threshold, int mz_bins, int rt_bins);
RcppExport SEXP _sfi_find_2d_peaks_c(SEXP mzSEXP, SEXP rtSEXP, SEXP intensitySEXP, SEXP mz_ppmSEXP, SEXP rt_windowSEXP, SEXP snr_thresholdSEXP, SEXP mz_binsSEXP, SEXP rt_binsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mz(mzSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rt(rtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type intensity(intensitySEXP);
    Rcpp::traits::input_parameter< double >::type mz_ppm(mz_ppmSEXP);
    Rcpp::traits::input_parameter< double >::type rt_window(rt_windowSEXP);
    Rcpp::traits::input_parameter< double >::type snr_threshold(snr_thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type mz_bins(mz_binsSEXP);
    Rcpp::traits::input_parameter< int >::type rt_bins(rt_binsSEXP);
    rcpp_result_gen = Rcpp::wrap(find_2d_peaks_c(mz, rt, intensity, mz_ppm, rt_window, snr_threshold, mz_bins, rt_bins));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sfi_find_2d_peaks_c", (DL_FUNC) &_sfi_find_2d_peaks_c, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_sfi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
